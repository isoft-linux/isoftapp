// Copyright (C) 2014 - 2015 Leslie Zhai <xiang.zhai@i-soft.com.cn>

#ifndef JADEDBUS_H
#define JADEDBUS_H

#include <QObject>

#include "jaded_interface.h"
#include "isoftapp-generated.h"

class JadedPackageObject;

class JadedBus : public QObject
{
    Q_OBJECT

    Q_PROPERTY(QList<QObject*> updates READ updates NOTIFY updateChanged)
    Q_PROPERTY(QList<QObject*> installed READ installed NOTIFY installedChanged)
    Q_PROPERTY(QList<QObject*> searchs READ searchs NOTIFY searchChanged)
    Q_PROPERTY(QList<QObject*> taskQueue READ taskQueue NOTIFY taskQueueChanged)

public:
    JadedBus(QObject *parent = 0);
    ~JadedBus();

    Q_INVOKABLE QString getInfo(QString name);
    Q_INVOKABLE void getUpdate();
    Q_INVOKABLE void getInstalled();
    Q_INVOKABLE void search(QString name);
    Q_INVOKABLE void install(QString name);
    Q_INVOKABLE void installFile(QString filePath);
    Q_INVOKABLE void uninstall(QString id);
    Q_INVOKABLE void update(QString name);
    Q_INVOKABLE void cancel(QString id);
    Q_INVOKABLE void getTaskQueue();

    QList<QObject*> updates() const { return m_updateList; }
    QList<QObject*> installed() const { return m_installedList; }
    QList<QObject*> searchs() const { return m_searchList; }
    QList<QObject*> taskQueue() const { return m_taskQueue; }

    QTimer *getPkgListTimer;

Q_SIGNALS:
    void errored(const QString &name);
    void updateChanged(int count);
    void installedChanged();
    void searchChanged(int count);
    void taskStarted(const QString &name);
    void taskChanged(const QString &name);
    void taskQueueChanged(int count);
    void getUpdateError();
    void getInstalledError();
    void searchError();
    void perChanged(const QString &name,int perCent);

private Q_SLOTS:
    void m_errored(const QString &name);
    void getUpdateFinished(const QStringList &update);
    void getInstalledFinished(const QStringList &installed);
    void searchFinished(const QStringList &search);
    void m_taskStarted(const QString &name);
    void taskFinished(const QString &name);
    void m_taskQueueChanged(const QStringList &task);
    void getUpdateTimeout();
    void getInstalledTimeout();
    void searchTimeout();
    void percentChged(qlonglong status, const QString &file, double percent);
    void searchChged(const QString &pkgName,qlonglong status);
    void listChged(const QString &pkgName);
    void updatePkgList(qlonglong status);

private:
    cn::com::isoft::JadedInterface* m_jaded;
    org::isoftlinux::Isoftapp *m_isoftapp = Q_NULLPTR;
    QList<QObject*> m_updateList;
    QList<QObject*> m_installedList;
    QList<QObject*> m_searchList;
    QList<QObject*> m_taskQueue;
};

class JadedPackageObject : public QObject 
{
    Q_OBJECT

    Q_PROPERTY(QString id READ id WRITE setId NOTIFY idChanged)
    Q_PROPERTY(QString name READ name WRITE setName NOTIFY nameChanged)
    Q_PROPERTY(QString icon READ icon WRITE setIcon NOTIFY iconChanged)
    Q_PROPERTY(QString version READ version WRITE setVersion 
               NOTIFY versionChanged)
    Q_PROPERTY(QString description READ description WRITE setDescription 
               NOTIFY descriptionChanged)

public:
    JadedPackageObject(const QString &id, 
                        const QString &name, 
                        const QString &icon, 
                        const QString &version, 
                        const QString &description, 
                        QObject *parent = 0) 
      : QObject(parent) 
    {
        m_id = id; m_name = name; m_icon = icon; m_version = version; 
        m_description = description;
    }

    QString id() const { return m_id; }
    void setId(const QString &id) 
    {
        if (id != m_id) m_id = id; emit idChanged();
    }

    QString name() const { return m_name; }
    void setName(const QString &name) 
    { 
        if (name != m_name) m_name = name; emit nameChanged(); 
    }

    QString icon() const { return m_icon; }
    void setIcon(const QString &icon) 
    {
        if (icon != m_icon) m_icon = icon; emit iconChanged();
    }

    QString version() const { return m_version; }
    void setVersion(const QString &version) 
    {
        if (version != m_version) m_version = version; emit versionChanged();
    }

    QString description() const { return m_description; }
    void setDescription(const QString &description) 
    {
        if (description != m_description) 
            m_description = description; emit descriptionChanged();
    }

Q_SIGNALS:
    void idChanged();
    void nameChanged();
    void iconChanged();
    void versionChanged();
    void descriptionChanged();

private:
    QString m_id;
    QString m_name;
    QString m_icon;
    QString m_version;
    QString m_description;
};

#endif  // JADEDBUS_H
